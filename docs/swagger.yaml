basePath: /
definitions:
  entity.Book:
    properties:
      author:
        type: string
      id:
        type: string
      tittle:
        type: string
    type: object
  v1.bookRequest:
    properties:
      author:
        type: string
      tittle:
        type: string
    type: object
  v1.errResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: API Server for Book Application
  version: "1.0"
paths:
  /api/v1/book:
    get:
      consumes:
      - application/json
      description: Get all books
      operationId: get-all-books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: GetAllBooks
      tags:
      - book
    post:
      consumes:
      - application/json
      description: Create new book
      operationId: create-book
      parameters:
      - description: Enter tittle and author of new book
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.bookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: CreateBook
      tags:
      - book
  /api/v1/book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by id
      operationId: delete-book
      parameters:
      - description: Enter id book
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: DeleteBook
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get book by id
      operationId: get-book-by-id
      parameters:
      - description: Enter id book
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: GetBookById
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update book by id
      operationId: update-book
      parameters:
      - description: Enter id book
        in: path
        name: id
        required: true
        type: string
      - description: Enter tittle and author of new book
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.bookRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: UpdateBook
      tags:
      - book
swagger: "2.0"
